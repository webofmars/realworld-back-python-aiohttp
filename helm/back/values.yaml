# Default values for back.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

conduit:
  postgresDb: conduit
  postgresHost: postgresql
  postgresPort: 5432
  migrations:
    alembicConfig: /opt/conduit/migrations/alembic.ini
    enabled: true
  secretKey: change-me-as-soon-as-possible
  postgresUser: conduit
  postgresPassword: conduit

replicaCount: 1

image:
  repository: registry.gitlab.com/webofmars/formations/cloud-apps/back
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets:
  - name: gitlab-registry

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: back.example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: back-tls
  #    hosts:
  #      - back.example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /api/v1/articles
    port: http
readinessProbe:
  httpGet:
    path: /api/v1/articles
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# dependencies:
postgresql:
  enabled: true
  fullnameOverride: "postgresql"
  architecture: standalone

  primary:
    persistence:
      size: 1Gi

  auth:
    postgresPassword: conduit
    username: conduit
    password: conduit
    database: conduit

  passwordUpdateJob:
    enabled: true
